---
title: "Linear Regression"
author: "Aria Saboonchi"
date: "2023-03-13"
output: 
  ioslides_presentation:
  transition : fast
  widescreen : true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(magrittr)
library(leaflet)
library(plotly)
library(ggplot2)
library(plot3D)
```


## Linear Regression
<p style ="font-size:16px"> Linear regression is defined as an algorithm that provides a linear relationship between an independent variable and a dependent variable to predict the outcome of future events. It is a statistical method used in data science and machine learning for predictive analysis.
<br><br>Regression Line:<br><br>
$E(y) = \beta_0 + \beta_1 x_1$ <br><br>
$var(y) = \sigma ^2$ 

Least Squares Line:<br><br>
$\hat{y} = a + bx$



## Dataset mtcars
<p style = "font-size:16px"> In this data set we load the data that was extracted from the 1974 Motor Trend US magazine.

```{r, echo=TRUE, message=FALSE}
data(mtcars)
df = mtcars[1:51,]
head(mtcars)
```
Data set provides comparison fuel consumption and 10 aspects of automobile design and performance for 32 automobiles

## 
Consider the following plot:<br>
```{r, echo=TRUE}
ggplot(data = df, aes(x = wt , y = mpg)) + 
  geom_point(colour = "red", na.rm = TRUE)

```


## Analyzing the plot
<p style = "font-size:16px">In the following slide we will apply equations for linear regressions. Our independent value is weight of the cars and will use it to create a predictive model of miles per gallon. The data set is relatively a small data set with small number of observations, it appears to be a linear relationship between the weight and miles per gallon of cars.<br><br>

$SSResid = \sum(y - \hat{y})^2 = \sum y^2 - a \sum y - b \sum xy$

## Plot with linear regression
```{r, echo=TRUE}
ggplot(data = df, aes( x = wt , y = mpg)) +
  geom_point(color ='red') + 
  geom_smooth(method = "lm" , se = FALSE)
```


## 3D plotly
<p style= "font-size:16px">We use the plotly to create a three dimensional visualization for Displacement vs mpg vs number of cylinders.<br>
```{r, echo = TRUE}
plot_ly(df, x=~wt, y=~mpg, z=~cyl) %>% add_markers(size = 1.5)

```


## 3D plot with linear regression
```{r, echo=FALSE}
x <- mtcars$wt
y <- mtcars$disp
z <- mtcars$mpg

# compute the linear regression(z = ax + by + d)
fit <- lm(z ~ x + y)

# Predict values on regular xy grid
grid.lines = 26
x.pred <- seq(min(x), max(x), length.out = grid.lines)
y.pred <- seq(min(y), max(y), length.out = grid.lines)
xy <- expand.grid( x = x.pred, y = y.pred)
z.pred <- matrix(predict(fit, newdata = xy), 
                 nrow = grid.lines, ncol = grid.lines)
# fitted points for droplines to surface
fitpoints <- predict(fit)
# scatter plot with regression plane
scatter3D(x, y, z, pch = 18, cex = 2, 
    theta = 20, phi = 20, ticktype = "detailed",
    xlab = "wt", ylab = "disp", zlab = "mpg",  
    surf = list(x = x.pred, y = y.pred, z = z.pred,  
    facets = NA, fit = fitpoints), main = "mtcars")
```
